{"version":3,"sources":["context.js","components/layout/Header.js","components/pages/About.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Header","branding","className","Link","to","defaultProps","About","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","sortIconClass","onClick","style","cursor","float","color","marginRight","marginTop","fontSize","Contacts","react","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","uuid","post","clearInputs","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updateContact","updateContactWithId","match","params","put","console","log","_context2","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fa7f4a1.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      }\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [ \n          action.payload,\n          ...state.contacts\n        ]\n      }\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n      }\n    default:\n      return state;\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState( state => reducer(state, action))\n    }\n  }\n\n  async componentDidMount () {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({ contacts: res.data });\n  }\n\n  render () {\n    return (\n      <Context.Provider value={ this.state }>\n        { this.props.children }\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const {branding} = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">{ branding }</Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\"><i className=\"fa fa-home\" /> Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fa fa-plus\" /> Add Contact</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\"><i className=\"fa fa-question\" /> About</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding: \"Contact Manager\"\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react';\n\nexport default () => {\n  return (\n    <div className=\"text-center\">\n      <h1 className=\"display-4 mb-2 text-danger\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    \n      dispatch({type: 'DELETE_CONTACT', payload: id});\n\n    } catch (e) {\n\n      dispatch({type: 'DELETE_CONTACT', payload: id});\n    }\n  }\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n\n          const { dispatch } = value;\n          const sortIconClass = showContactInfo ? 'fa fa-angle-up' : 'fa fa-angle-down';\n\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>{ name } { ' ' } \n                <i className={ sortIconClass } onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })} style={{ cursor: 'pointer' }} />\n                <i className=\"fa fa-times\" onClick={ () => this.onDeleteClick(id, dispatch) } style={{ cursor: 'pointer', float: 'right', color: 'red' }} />\n                <Link to={`/contact/edit/${id}`} style={{ float: 'right' }}>\n                  <i className=\"fa fa-pencil-alt\" style={{ cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem', marginTop: '3px', fontSize: '1.1rem' }} />\n                </Link>     \n              </h4>\n              { showContactInfo ? (\n                  <ul className=\"list-group\">\n                    <li className=\"list-group-item\">Email: { email }</li>\n                    <li className=\"list-group-item\">Phone: { phone }</li>\n                  </ul>\n                ) : null\n              }        \n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n}\n\nexport default Contact;\n","import React, { Component, Fragment } from 'react';\nimport { Consumer } from '../../context';\nimport Contact from './Contact';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        { value => {\n\n            const { contacts } = value;\n\n            return (\n              <Fragment>\n                  <h1 className=\"display-4 mb-2 text-danger\">Contact List</h1>\n                  { contacts.map(contact => <Contact key={ contact.id } contact={ contact } />) }\n              </Fragment>\n            )\n          }\n        }\n      </Consumer>\n    )\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={ name }>{ label }</label>\n      <input \n        type={ type } \n        name={ name } \n        className={ classnames('form-control form-control-lg', { 'is-invalid': error }) } \n        placeholder={ placeholder } \n        value={ value } \n        onChange={ onChange }\n      />\n      { error &&  <div className=\"invalid-feedback\">{ error }</div> }\n    </div>\n  )\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n}\n\nexport default TextInputGroup","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n\n    if (name === '') {\n      this.setState({ errors: { ...this.state.errors, name: 'Name is required' }});\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { ...this.state.errors, email: 'Email is required' }});\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { ...this.state.errors, phone: 'Phone is required' }});\n      return;\n    }\n\n    const newContact = {\n      id: uuid(),\n      name,\n      email,\n      phone\n    }\n\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n    \n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n    this.clearInputs();\n    this.props.history.push('/');\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  clearInputs = () => {\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    })\n  }\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={ (e) => this.onSubmit(dispatch, e) }>\n                  \n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\" \n                    className=\"form-control form-control-lg\" \n                    placeholder=\"Enter Name...\" \n                    value={ name } \n                    onChange={ this.onChange }\n                    error={ errors.name }\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\" \n                    name=\"email\" \n                    className=\"form-control form-control-lg\" \n                    placeholder=\"Enter Email...\" \n                    value={ email } \n                    onChange={ this.onChange }\n                    error={ errors.email }\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    type=\"phone\" \n                    name=\"phone\" \n                    className=\"form-control form-control-lg\" \n                    placeholder=\"Enter Phone...\" \n                    value={ phone } \n                    onChange={ this.onChange }\n                    error={ errors.phone }\n                  />\n\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;\n\n/**\n * TODO: Input validasyon blur'da kontrol edilecek.\n */\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  async componentDidMount () {\n    const { id } = this.props.match.params;\n\n    try {\n      \n      const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n      const contact = res.data;\n  \n      this.setState({\n        name: contact.name,\n        email: contact.email,\n        phone: contact.phone,\n      });\n\n    } catch (e) {\n\n      console.log(\"e: \", e);\n    }\n    \n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n\n    if (name === '') {\n      this.setState({ errors: { ...this.state.errors, name: 'Name is required' }});\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { ...this.state.errors, email: 'Email is required' }});\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { ...this.state.errors, phone: 'Phone is required' }});\n      return;\n    }\n\n    const updateContact = {\n      name,\n      email,\n      phone\n    };\n    const { id } = this.props.match.params;\n\n    try {\n\n      const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n      dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    } catch (e) {\n\n      const updateContactWithId = {\n        ...updateContact,\n        id\n      };\n\n      console.log(\"updateContactWithId: \", updateContactWithId);\n\n      dispatch({ type: 'UPDATE_CONTACT', payload: updateContactWithId });\n    }\n\n    this.clearInputs();\n    this.props.history.push('/');\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  clearInputs = () => {\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    })\n  }\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={ (e) => this.onSubmit(dispatch, e) }>\n                  \n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\" \n                    className=\"form-control form-control-lg\" \n                    placeholder=\"Enter Name...\" \n                    value={ name } \n                    onChange={ this.onChange }\n                    error={ errors.name }\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\" \n                    name=\"email\" \n                    className=\"form-control form-control-lg\" \n                    placeholder=\"Enter Email...\" \n                    value={ email } \n                    onChange={ this.onChange }\n                    error={ errors.email }\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    type=\"phone\" \n                    name=\"phone\" \n                    className=\"form-control form-control-lg\" \n                    placeholder=\"Enter Phone...\" \n                    value={ phone } \n                    onChange={ this.onChange }\n                    error={ errors.phone }\n                  />\n\n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;\n\n/**\n * TODO: Input validasyon blur'da kontrol edilecek.\n */\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div className=\"text-center\">\n      <h1 className=\"display-4 mb-2 text-danger\">Page Not Found!</h1>\n      <h1 className=\"display-4 mb-2 text-danger\"><i className=\"fa fa-times\" /></h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}","import React, { Component, Fragment } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from './context';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/pages/NotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <Fragment>\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={ Contacts } />\n                <Route path=\"/about\" component={ About } />\n                <Route path=\"/contact/add\" component={ AddContact } />\n                <Route path=\"/contact/edit/:id\" component={ EditContact } />\n                <Route component={ NotFound } />\n              </Switch>\n            </div>\n          </Fragment>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}